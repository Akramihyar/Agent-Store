name: Build and Push AI Hub Agent Store Services

on:
  push:
    branches: [dev]

env:
  AZURE_CONTAINER_REGISTRY: neulandacr
  RESOURCE_GROUP: ai-hub-agent-store

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - context: ./server
            dockerfile: Dockerfile
            image_name: ai-hub-agent-store-backend
            app_name: ai-hub-agent-store-backend
            port: 3001
          - context: .
            dockerfile: Dockerfile
            image_name: ai-hub-agent-store-frontend
            app_name: ai-hub-agent-store-frontend
            port: 80

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID_2 }}
          password: ${{ secrets.AZURE_CLIENT_SECRET_2 }}

      - name: Build and push ${{ matrix.image_name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ matrix.image_name }}:${{ github.run_id }}
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ matrix.image_name }}:latest
          cache-from: |
            type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ matrix.image_name }}:buildcache
          cache-to: |
            type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ matrix.image_name }}:buildcache,mode=max

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ${{ matrix.app_name }} to Azure Container Apps
        run: |
          IMAGE="${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ matrix.image_name }}:${{ github.run_id }}"
          echo "Updating container app ${{ matrix.app_name }} with new image: $IMAGE"

          # Update container app with new image and ensure correct port is exposed
          az containerapp update \
            --name ${{ matrix.app_name }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image "$IMAGE" \
            --target-port ${{ matrix.port }}

          echo "âœ… Successfully deployed ${{ matrix.app_name }} on port ${{ matrix.port }}"